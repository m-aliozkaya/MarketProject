<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MarketProjectDataSet" targetNamespace="http://tempuri.org/MarketProjectDataSet.xsd" xmlns:mstns="http://tempuri.org/MarketProjectDataSet.xsd" xmlns="http://tempuri.org/MarketProjectDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MarketProjectConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MarketProjectConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MarketProject.Properties.Settings.GlobalReference.Default.MarketProjectConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarketTableAdapter" GeneratorDataComponentClassName="MarketTableAdapter" Name="Market" UserDataComponentName="MarketTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MarketProjectConnectionString (Settings)" DbObjectName="MarketProject.dbo.Market" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Market] WHERE (([marketID] = @Original_marketID) AND ((@IsNull_marketName = 1 AND [marketName] IS NULL) OR ([marketName] = @Original_marketName)) AND ((@IsNull_marketAdres = 1 AND [marketAdres] IS NULL) OR ([marketAdres] = @Original_marketAdres)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_marketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_marketName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_marketName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_marketAdres" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_marketAdres" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Market] ([marketID], [marketName], [marketAdres]) VALUES (@marketID, @marketName, @marketAdres);
SELECT marketID, marketName, marketAdres FROM Market WHERE (marketID = @marketID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@marketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@marketName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@marketAdres" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT marketID, marketName, marketAdres FROM dbo.Market</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Market] SET [marketID] = @marketID, [marketName] = @marketName, [marketAdres] = @marketAdres WHERE (([marketID] = @Original_marketID) AND ((@IsNull_marketName = 1 AND [marketName] IS NULL) OR ([marketName] = @Original_marketName)) AND ((@IsNull_marketAdres = 1 AND [marketAdres] IS NULL) OR ([marketAdres] = @Original_marketAdres)));
SELECT marketID, marketName, marketAdres FROM Market WHERE (marketID = @marketID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@marketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@marketName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@marketAdres" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_marketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_marketName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_marketName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_marketAdres" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_marketAdres" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="marketAdres" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="marketID" DataSetColumn="marketID" />
              <Mapping SourceColumn="marketName" DataSetColumn="marketName" />
              <Mapping SourceColumn="marketAdres" DataSetColumn="marketAdres" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MarketProjectDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MarketProjectDataSet" msprop:Generator_UserDSName="MarketProjectDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Market" msprop:Generator_TableClassName="MarketDataTable" msprop:Generator_TableVarName="tableMarket" msprop:Generator_TablePropName="Market" msprop:Generator_RowDeletingName="MarketRowDeleting" msprop:Generator_RowChangingName="MarketRowChanging" msprop:Generator_RowEvHandlerName="MarketRowChangeEventHandler" msprop:Generator_RowDeletedName="MarketRowDeleted" msprop:Generator_UserTableName="Market" msprop:Generator_RowChangedName="MarketRowChanged" msprop:Generator_RowEvArgName="MarketRowChangeEvent" msprop:Generator_RowClassName="MarketRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="marketID" msprop:Generator_ColumnVarNameInTable="columnmarketID" msprop:Generator_ColumnPropNameInRow="marketID" msprop:Generator_ColumnPropNameInTable="marketIDColumn" msprop:Generator_UserColumnName="marketID" type="xs:int" />
              <xs:element name="marketName" msprop:Generator_ColumnVarNameInTable="columnmarketName" msprop:Generator_ColumnPropNameInRow="marketName" msprop:Generator_ColumnPropNameInTable="marketNameColumn" msprop:Generator_UserColumnName="marketName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="marketAdres" msprop:Generator_ColumnVarNameInTable="columnmarketAdres" msprop:Generator_ColumnPropNameInRow="marketAdres" msprop:Generator_ColumnPropNameInTable="marketAdresColumn" msprop:Generator_UserColumnName="marketAdres" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Market" />
      <xs:field xpath="mstns:marketID" />
    </xs:unique>
  </xs:element>
</xs:schema>